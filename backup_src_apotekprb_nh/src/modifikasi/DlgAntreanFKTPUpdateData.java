    /*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Dlgbahasa_pasien.java
 *
 * Created on May 23, 2010, 1:25:13 AM
 */

package modifikasi;

import simrskhanza.*;
import bridging.ApiAntreanBPJSFKTP;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import fungsi.koneksiDB;
import fungsi.sekuel;
import fungsi.validasi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import jxl.write.DateTime;
import org.hsqldb.Library;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;

/**
 *
 * @author dosen
 */
public class DlgAntreanFKTPUpdateData extends javax.swing.JDialog {
    private Connection koneksi=koneksiDB.condb();
    private sekuel Sequel=new sekuel();
    private validasi Valid=new validasi();
    private PreparedStatement ps;
    private ResultSet rs;
    private ApiAntreanBPJSFKTP apiantrean=new ApiAntreanBPJSFKTP();
    private HttpHeaders headers;
    private HttpEntity requestEntity;
    private ObjectMapper mapper = new ObjectMapper();
    private JsonNode root;
    private JsonNode nameNode;
    private JsonNode response;
    private String respon="",utc="",URL="",requestJson, datajam="",sekarang="",nomorrawat="";
    private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    private Date parsedDate;
     
    

    /** Creates new form Dlgbahasa_pasien
     * @param parent
     * @param modal */
    public DlgAntreanFKTPUpdateData(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocation(10,10);
        setSize(459,539);
        
        
         
    } 
   

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        internalFrame1 = new widget.InternalFrame();
        panelGlass7 = new widget.panelisi();
        jLabel4 = new widget.Label();
        TNoKartu = new widget.TextBox();
        jLabel5 = new widget.Label();
        jLabel6 = new widget.Label();
        jLabel7 = new widget.Label();
        KdPoli = new widget.TextBox();
        NmPoli = new widget.TextBox();
        TAlasan = new widget.TextBox();
        TanggalKunjungan = new widget.Tanggal();
        panelGlass9 = new widget.panelisi();
        BtnHadir = new widget.Button();
        BtnTidakHadir = new widget.Button();
        BtnBatal = new widget.Button();
        BtnKeluar = new widget.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        internalFrame1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(240, 245, 235)), "::[ Update Status Antrean ]::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(50, 50, 50))); // NOI18N
        internalFrame1.setName("internalFrame1"); // NOI18N
        internalFrame1.setLayout(new java.awt.BorderLayout(1, 1));

        panelGlass7.setName("panelGlass7"); // NOI18N
        panelGlass7.setPreferredSize(new java.awt.Dimension(44, 47));
        panelGlass7.setLayout(null);

        jLabel4.setText("Alasan :");
        jLabel4.setName("jLabel4"); // NOI18N
        panelGlass7.add(jLabel4);
        jLabel4.setBounds(0, 100, 80, 23);

        TNoKartu.setName("TNoKartu"); // NOI18N
        TNoKartu.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TNoKartuKeyPressed(evt);
            }
        });
        panelGlass7.add(TNoKartu);
        TNoKartu.setBounds(95, 12, 220, 23);

        jLabel5.setText("No.Peserta :");
        jLabel5.setName("jLabel5"); // NOI18N
        panelGlass7.add(jLabel5);
        jLabel5.setBounds(0, 12, 90, 23);

        jLabel6.setText("Tgl. Kunjungan :");
        jLabel6.setName("jLabel6"); // NOI18N
        panelGlass7.add(jLabel6);
        jLabel6.setBounds(0, 40, 90, 23);

        jLabel7.setText("Poliklinik :");
        jLabel7.setName("jLabel7"); // NOI18N
        panelGlass7.add(jLabel7);
        jLabel7.setBounds(0, 70, 80, 23);

        KdPoli.setEditable(false);
        KdPoli.setName("KdPoli"); // NOI18N
        KdPoli.setPreferredSize(new java.awt.Dimension(64, 38));
        KdPoli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                KdPoliKeyPressed(evt);
            }
        });
        panelGlass7.add(KdPoli);
        KdPoli.setBounds(90, 70, 70, 23);

        NmPoli.setEditable(false);
        NmPoli.setName("NmPoli"); // NOI18N
        NmPoli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NmPoliKeyPressed(evt);
            }
        });
        panelGlass7.add(NmPoli);
        NmPoli.setBounds(160, 70, 150, 23);

        TAlasan.setName("TAlasan"); // NOI18N
        TAlasan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TAlasanKeyPressed(evt);
            }
        });
        panelGlass7.add(TAlasan);
        TAlasan.setBounds(90, 100, 480, 23);

        TanggalKunjungan.setForeground(new java.awt.Color(50, 70, 50));
        TanggalKunjungan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2024-08-15" }));
        TanggalKunjungan.setDisplayFormat("yyyy-MM-dd");
        TanggalKunjungan.setName("TanggalKunjungan"); // NOI18N
        TanggalKunjungan.setOpaque(false);
        TanggalKunjungan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TanggalKunjunganKeyPressed(evt);
            }
        });
        panelGlass7.add(TanggalKunjungan);
        TanggalKunjungan.setBounds(100, 40, 90, 23);

        internalFrame1.add(panelGlass7, java.awt.BorderLayout.CENTER);

        panelGlass9.setName("panelGlass9"); // NOI18N
        panelGlass9.setPreferredSize(new java.awt.Dimension(44, 44));
        panelGlass9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 9));

        BtnHadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Export.png"))); // NOI18N
        BtnHadir.setMnemonic('B');
        BtnHadir.setText("Hadir");
        BtnHadir.setToolTipText("Alt+B");
        BtnHadir.setName("BtnHadir"); // NOI18N
        BtnHadir.setPreferredSize(new java.awt.Dimension(150, 23));
        BtnHadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnHadirActionPerformed(evt);
            }
        });
        BtnHadir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnHadirKeyPressed(evt);
            }
        });
        panelGlass9.add(BtnHadir);

        BtnTidakHadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/Cancel-2-16x16.png"))); // NOI18N
        BtnTidakHadir.setMnemonic('B');
        BtnTidakHadir.setText("Tidak Hadir");
        BtnTidakHadir.setToolTipText("Alt+B");
        BtnTidakHadir.setName("BtnTidakHadir"); // NOI18N
        BtnTidakHadir.setPreferredSize(new java.awt.Dimension(150, 23));
        BtnTidakHadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTidakHadirActionPerformed(evt);
            }
        });
        BtnTidakHadir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnTidakHadirKeyPressed(evt);
            }
        });
        panelGlass9.add(BtnTidakHadir);

        BtnBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/stop_f2.png"))); // NOI18N
        BtnBatal.setMnemonic('H');
        BtnBatal.setText("Batal");
        BtnBatal.setToolTipText("Alt+H");
        BtnBatal.setName("BtnBatal"); // NOI18N
        BtnBatal.setPreferredSize(new java.awt.Dimension(100, 23));
        BtnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBatalActionPerformed(evt);
            }
        });
        BtnBatal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnBatalKeyPressed(evt);
            }
        });
        panelGlass9.add(BtnBatal);

        BtnKeluar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/picture/exit.png"))); // NOI18N
        BtnKeluar.setMnemonic('K');
        BtnKeluar.setToolTipText("Alt+K");
        BtnKeluar.setName("BtnKeluar"); // NOI18N
        BtnKeluar.setPreferredSize(new java.awt.Dimension(28, 23));
        BtnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnKeluarActionPerformed(evt);
            }
        });
        BtnKeluar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                BtnKeluarKeyPressed(evt);
            }
        });
        panelGlass9.add(BtnKeluar);

        internalFrame1.add(panelGlass9, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(internalFrame1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
   
    }//GEN-LAST:event_formWindowOpened

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    private void KdPoliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_KdPoliKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_KdPoliKeyPressed

    private void NmPoliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NmPoliKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_NmPoliKeyPressed

    private void TAlasanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TAlasanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TAlasanKeyPressed

    private void TNoKartuKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TNoKartuKeyPressed

    }//GEN-LAST:event_TNoKartuKeyPressed

    private void BtnBatalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnBatalKeyPressed

    }//GEN-LAST:event_BtnBatalKeyPressed

    private void BtnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBatalActionPerformed
           if(TNoKartu.getText().trim().equals("")){
               Valid.textKosong(TNoKartu, "Nomor Kartu");
           }else if (KdPoli.getText().trim().equals("")||NmPoli.getText().trim().equals("")){
               Valid.textKosong(KdPoli, "Kode poli dan Nama Poli");
           }else if (TAlasan.getText().trim().equals("")){
                Valid.textKosong(TAlasan, "Alasan");
           }else{ 
                            try {
                                
                               headers = new HttpHeaders();
                               headers.setContentType(MediaType.APPLICATION_JSON);
                               headers.add("X-cons-id",koneksiDB.CONSIDANTREANFKTP());
                               utc=String.valueOf(apiantrean.GetUTCdatetimeAsString());
                               headers.add("X-timestamp",utc);
                               headers.add("X-signature",apiantrean.getHmac());
                               // headers.add("X-authorization","Basic "+Base64.encodeBase64String(otorisasi.getBytes()));
                               headers.add("user_key",koneksiDB.USERKEYANTREANFKTP());
                               requestJson ="{" +
                               "\"tanggalperiksa\": \""+TanggalKunjungan.getSelectedItem().toString()+"\"," +
                               "\"kodepoli\": \""+KdPoli.getText()+"\"," +
                               "\"nomorkartu\": \""+TNoKartu.getText()+"\"," +
                               "\"alasan\": \""+TAlasan.getText()+"\" "+
                               "}";
                               System.out.println("JSON : "+requestJson+"\n");
                               requestEntity = new HttpEntity(requestJson,headers);
                               URL = koneksiDB.URLANTREANFKTP()+"/antrean/batal";
                               System.out.println("URL : "+URL);
                               root = mapper.readTree(apiantrean.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
                               nameNode = root.path("metadata");
                               respon=nameNode.path("code").asText();
                               System.out.println("respon WS BPJS add Antrian : "+nameNode.path("code").asText()+" "+nameNode.path("message").asText()+"\n");
                               JOptionPane.showMessageDialog(null,nameNode.path("code").asText()+" "+nameNode.path("message").asText());
                               // menyimpan log antrol
                               if(nameNode.path("code").asText().equals("200")){
                                    Sequel.menyimpan("addantrian_fktp","?,?,?",3,new String[]{TanggalKunjungan.getSelectedItem().toString(),TNoKartu.getText(),"Batal karena "+TAlasan.getText()});
                                    if(Sequel.cariInteger("select count(no_rawat) from referensi_mobilejkn_bpjs where no_rawat='"+nomorrawat+"' ")>0){
                                       Sequel.mengedittf("referensi_mobilejkn_bpjs","no_rawat=?","status='Batal'",1,new String[]{nomorrawat});
                                    }
                                    emptTeks();
                                    dispose();
                                } 
                           } catch (Exception e) {
                               //                    statusantrean=false;
                               System.out.println("Notif WS Antrean Bpjs : "+e);
                           }
           }
    }//GEN-LAST:event_BtnBatalActionPerformed

    private void BtnTidakHadirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnTidakHadirKeyPressed

    }//GEN-LAST:event_BtnTidakHadirKeyPressed

    private void BtnTidakHadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTidakHadirActionPerformed
        if(TNoKartu.getText().trim().equals("")){
               Valid.textKosong(TNoKartu, "Nomor Kartu");
           }else if (KdPoli.getText().trim().equals("")||NmPoli.getText().trim().equals("")){
               Valid.textKosong(KdPoli, "Kode poli dan Nama Poli");
           }else{
                    try {
                        datajam=TanggalKunjungan.getSelectedItem().toString()+" "+Sequel.cariIsi("select curtime()");
                        parsedDate = dateFormat.parse(datajam);
                        headers = new HttpHeaders();
                        headers.setContentType(MediaType.APPLICATION_JSON);
                        headers.add("X-cons-id",koneksiDB.CONSIDANTREANFKTP());
                        utc=String.valueOf(apiantrean.GetUTCdatetimeAsString());
                        headers.add("X-timestamp",utc);
                        headers.add("X-signature",apiantrean.getHmac());
                        // headers.add("X-authorization","Basic "+Base64.encodeBase64String(otorisasi.getBytes()));
                        headers.add("user_key",koneksiDB.USERKEYANTREANFKTP());
                        requestJson ="{" +
                        "\"tanggalperiksa\": \""+TanggalKunjungan.getSelectedItem().toString()+"\"," +
                        "\"kodepoli\": \""+KdPoli.getText()+"\"," +
                        "\"nomorkartu\": \""+TNoKartu.getText()+"\"," +
                        "\"status\": 2," +
                        "\"waktu\": "+parsedDate.getTime()+" "+
                        "}";
                        System.out.println("JSON : "+requestJson+"\n");
                        requestEntity = new HttpEntity(requestJson,headers);
                        URL = koneksiDB.URLANTREANFKTP()+"/antrean/panggil";
                        System.out.println("URL : "+URL);
                        root = mapper.readTree(apiantrean.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
                        nameNode = root.path("metadata");
                        respon=nameNode.path("code").asText();
                        System.out.println("respon WS BPJS add Antrian : "+nameNode.path("code").asText()+" "+nameNode.path("message").asText()+"\n");
                        JOptionPane.showMessageDialog(null,nameNode.path("code").asText()+" "+nameNode.path("message").asText());
                        // menyimpan log antrol
                        if(nameNode.path("code").asText().equals("200")){
                            Sequel.menyimpan("addantrian_fktp","?,?,?",3,new String[]{TanggalKunjungan.getSelectedItem().toString(),TNoKartu.getText(),"Tidak Hadir"});
                            if(Sequel.cariInteger("select count(no_rawat) from referensi_mobilejkn_bpjs where no_rawat='"+nomorrawat+"' ")>0){
                                Sequel.mengedittf("referensi_mobilejkn_bpjs","no_rawat=?","status='Tidak Hadir'",1,new String[]{nomorrawat});
                                //Sequel.query("update referensi_mobilejkn_bpjs set status='Tidak Hadir' where no_rawat='"+nomorrawat+"' ");
                            }
                            emptTeks();
                            dispose();
                        } 
                    } catch (Exception e) {
                        //                    statusantrean=false;
                        System.out.println("Notif WS Antrean Bpjs : "+e);
                    }
           }
    }//GEN-LAST:event_BtnTidakHadirActionPerformed

    private void BtnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_BtnKeluarActionPerformed

    private void BtnKeluarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnKeluarKeyPressed

    }//GEN-LAST:event_BtnKeluarKeyPressed

    private void TanggalKunjunganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TanggalKunjunganKeyPressed

    }//GEN-LAST:event_TanggalKunjunganKeyPressed

    private void BtnHadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnHadirActionPerformed
      if(TNoKartu.getText().trim().equals("")){
               Valid.textKosong(TNoKartu, "Nomor Kartu");
           }else if (KdPoli.getText().trim().equals("")||NmPoli.getText().trim().equals("")){
               Valid.textKosong(KdPoli, "Kode poli dan Nama Poli");
           }else{
                    try {
                        datajam=TanggalKunjungan.getSelectedItem().toString()+" "+Sequel.cariIsi("select curtime()");
                        parsedDate = dateFormat.parse(datajam);
                        headers = new HttpHeaders();
                        headers.setContentType(MediaType.APPLICATION_JSON);
                        headers.add("X-cons-id",koneksiDB.CONSIDANTREANFKTP());
                        utc=String.valueOf(apiantrean.GetUTCdatetimeAsString());
                        headers.add("X-timestamp",utc);
                        headers.add("X-signature",apiantrean.getHmac());
                        // headers.add("X-authorization","Basic "+Base64.encodeBase64String(otorisasi.getBytes()));
                        headers.add("user_key",koneksiDB.USERKEYANTREANFKTP());
                        requestJson ="{" +
                        "\"tanggalperiksa\": \""+TanggalKunjungan.getSelectedItem().toString()+"\"," +
                        "\"kodepoli\": \""+KdPoli.getText()+"\"," +
                        "\"nomorkartu\": \""+TNoKartu.getText()+"\"," +
                        "\"status\": 1," +
                        "\"waktu\": "+parsedDate.getTime()+" "+
                        "}";
                        System.out.println("JSON : "+requestJson+"\n");
                        requestEntity = new HttpEntity(requestJson,headers);
                        URL = koneksiDB.URLANTREANFKTP()+"/antrean/panggil";
                        System.out.println("URL : "+URL);
                        root = mapper.readTree(apiantrean.getRest().exchange(URL, HttpMethod.POST, requestEntity, String.class).getBody());
                        nameNode = root.path("metadata");
                        respon=nameNode.path("code").asText();
                        System.out.println("respon WS BPJS add Antrian : "+nameNode.path("code").asText()+" "+nameNode.path("message").asText()+"\n");
                        JOptionPane.showMessageDialog(null,nameNode.path("code").asText()+" "+nameNode.path("message").asText());
                        // menyimpan log antrol
                        if(nameNode.path("code").asText().equals("200")){
                            Sequel.menyimpan("addantrian_fktp","?,?,?",3,new String[]{TanggalKunjungan.getSelectedItem().toString(),TNoKartu.getText(),"Tidak Hadir"});
                            if(Sequel.cariInteger("select count(no_rawat) from referensi_mobilejkn_bpjs where no_rawat='"+nomorrawat+"' ")>0){
                                //Sequel.query("update referensi_mobilejkn_bpjs set status='Hadir' where no_rawat='"+nomorrawat+"' ");
                                 Sequel.mengedittf("referensi_mobilejkn_bpjs","no_rawat=?","status='Hadir'",1,new String[]{nomorrawat});
                            }
                            emptTeks();
                            dispose();
                        } 
                    } catch (Exception e) {
                        //                    statusantrean=false;
                        System.out.println("Notif WS Antrean Bpjs : "+e);
                    }
           }
    }//GEN-LAST:event_BtnHadirActionPerformed

    private void BtnHadirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BtnHadirKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnHadirKeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            DlgMasterLetak dialog = new DlgMasterLetak(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private widget.Button BtnBatal;
    private widget.Button BtnHadir;
    private widget.Button BtnKeluar;
    private widget.Button BtnTidakHadir;
    private widget.TextBox KdPoli;
    private widget.TextBox NmPoli;
    private widget.TextBox TAlasan;
    private widget.TextBox TNoKartu;
    private widget.Tanggal TanggalKunjungan;
    private widget.InternalFrame internalFrame1;
    private widget.Label jLabel4;
    private widget.Label jLabel5;
    private widget.Label jLabel6;
    private widget.Label jLabel7;
    private widget.panelisi panelGlass7;
    private widget.panelisi panelGlass9;
    // End of variables declaration//GEN-END:variables

    public void getampil(String kdpoli, String nokartu, Date tgl, String norawat) {
        TanggalKunjungan.setDate(tgl);
        TNoKartu.setText(nokartu);
        nomorrawat=norawat;
        KdPoli.setText(Sequel.cariIsi("SELECT kd_poli_pcare FROM maping_poliklinik_pcare WHERE kd_poli_rs='"+kdpoli+"' "));
        NmPoli.setText(Sequel.cariIsi("SELECT nm_poli_pcare FROM maping_poliklinik_pcare WHERE kd_poli_rs='"+kdpoli+"' "));
    }

    public void emptTeks() {
        TNoKartu.setText("");
        KdPoli.setText("");
        NmPoli.setText("");
        TanggalKunjungan.setDate(new Date());
        TNoKartu.requestFocus();
    }

    
}
